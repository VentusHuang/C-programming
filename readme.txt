This program is set up for running the y86 instruction. The first thing to do that is store the file in the correct address. We need to know that size is used for malloc, and string and byte is used for storing the value in the given address. The hardest thing of this part in the format of the total memory, I have tried to use char * but it can not work at all, so I decide to use unsigned char which is easier for me to do the next step.
Moreover, we need to the fetch part after wo store the input. I set up some status according to the homework sheet, like AOK, IDR, HLT and ADR. Those are used to determine whether the program is running correctly or not. If it meets something wrong, it will jump out the program and print and error message. 
Then I need to do the decode, there are so many different case of input, so I need to figure it out one by one. Also, different kind of input use different length of the message, this is the hardest thing of decoding part. Also, I set up a union, which help me a lot while taking the store value out of the unsigned char string, it is convenience to for me to change the unsigned char in the memory to a correct integer. 
For the disassembly part, it is easy when I finish my emulator program, literally just copy most of the part from the emulator, but I need to set up the name for the different register, and print out the register and the value base on different instruction. 

